{"version":3,"sources":["components/PlantList.js","components/ShoppingCart.js","components/CheckoutForm.js","hooks/useForm.js","App.js","hooks/useDarkMode.js","index.js"],"names":["PlantList","state","plants","searchTerm","filterPlants","filter","plant","name","toLowerCase","includes","handleInputChange","e","setState","target","value","axios","get","then","res","console","log","data","plantsData","catch","err","className","onChange","this","placeholder","map","key","id","src","img","alt","scientificName","description","price","light","watering","onClick","props","addToCart","Component","ShoppingCart","total","cart","reduce","sum","d","data-testid","removeFromCart","history","push","initialValue","firstName","lastName","address","city","zip","CheckoutForm","useState","showSuccessMessage","setShowSuccessMessage","values","setValues","useForm","handleChanges","onSubmit","preventDefault","role","App","initialVal","useEffect","document","body","classList","add","remove","useDarkMode","darkMode","setDarkMode","setCart","p","exact","to","length","path","render","component","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.5ed8774c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nexport default class PlantList extends Component {\r\n  // add state with a property called \"plants\" - initialize as an empty array\r\n\r\n  state = {\r\n\r\n    plants: [],\r\n    searchTerm: '',\r\n  }\r\n\r\n  // when the component mounts:\r\n  //   - fetch data from the server endpoint - http://localhost:3333/plants\r\n  //   - set the returned plants array to this.state.plants\r\n  componentDidMount() {\r\n    axios.get('http://localhost:3333/plants')\r\n      .then(res => {\r\n        // debugger\r\n        console.log(res.data.plantsData)\r\n        this.setState({\r\n          plants: res.data.plantsData\r\n        })\r\n      })\r\n\r\n      .catch(err => {\r\n        debugger\r\n      })\r\n  }\r\n\r\n\r\n  filterPlants = (plants) => {\r\n\r\n    return plants.filter( plant => {\r\n      if(!this.state.searchTerm){\r\n        return plant\r\n      }\r\n      if(plant.name.toLowerCase().includes(this.state.searchTerm.toLowerCase()) \r\n     \r\n       ){\r\n        return plant\r\n      }\r\n\r\n    })\r\n\r\n  }\r\n\r\n  handleInputChange = e => {\r\n    this.setState({\r\n      searchTerm: e.target.value\r\n    })\r\n  }\r\n\r\n  /*********  DON'T CHANGE ANYTHING IN THE RENDER FUNCTION *********/\r\n  render() {\r\n    return (\r\n      <main className=\"plant-list\">\r\n      \r\n      <input \r\n      onChange={this.handleInputChange}\r\n      placeholder='Lookup plants by name'\r\n      />\r\n      \r\n        {this.filterPlants(this.state.plants).map((plant) => (\r\n        \r\n          <div className=\"plant-card\" key={plant.id}>\r\n            <img className=\"plant-image\" src={plant.img} alt={plant.name} />\r\n            <div className=\"plant-details\">\r\n              <h2 className=\"plant-name\">{plant.name}</h2>\r\n              <p className=\"plant-scientific-name\">{plant.scientificName}</p>\r\n              <p>{plant.description}</p>\r\n              <div className=\"plant-bottom-row\">\r\n                <p>${plant.price}</p>\r\n                <p>‚òÄÔ∏è {plant.light}</p>\r\n                <p>üí¶ {plant.watering}x/month</p>\r\n              </div>\r\n              <button\r\n                className=\"plant-button\"\r\n                onClick={() => this.props.addToCart(plant)}\r\n              >\r\n                Add to cart\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </main>\r\n    );\r\n  }\r\n}","import React from \"react\";\r\n\r\n/********* DO NOT DO ANYTHING IN THIS COMPONENT *********/\r\n\r\nexport default function ShoppingCart(props) {\r\n  const total = props.cart.reduce((sum, d) => sum + d.price, 0);\r\n  return (\r\n    <div className=\"cart\">\r\n      {props.cart.map((plant) => (\r\n        <div className=\"plant-card\" key={plant.id}>\r\n          <img className=\"plant-image\" src={plant.img} alt={plant.name} />\r\n          <div className=\"plant-details\">\r\n            <h2 className=\"plant-name\" data-testid=\"plantName\">{plant.name}</h2>\r\n            <p>${plant.price}</p>\r\n            <button\r\n              className=\"plant-button\"\r\n              onClick={() => props.removeFromCart(plant)}\r\n            >\r\n              Remove\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ))}\r\n      <div className=\"checkout-section\">\r\n        <p className=\"total\">Total: ${total}</p>\r\n        <button\r\n          className=\"checkout\"\r\n          onClick={() => props.history.push(\"/checkout\")}\r\n        >\r\n          Checkout\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {useForm} from '../hooks/useForm'\r\n\r\nconst initialValue = {\r\n  firstName: \"\",\r\n  lastName: \"\",\r\n  address: \"\",\r\n  city: \"\",\r\n  state: \"\",\r\n  zip: \"\",\r\n};\r\n// This form should be handled by a \"useForm\" custom hook\r\n// Build out the logic needed for a form custom hook (see the useForm.js file)\r\n// and replace the necessary stateful logic from CheckoutForm with the hook\r\n\r\nconst CheckoutForm = (props) => {\r\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false);\r\n\r\n  const [values, handleChanges] = useForm(initialValue)\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setShowSuccessMessage(true);\r\n  };\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit}>\r\n        <h2>Checkout Form</h2>\r\n        <label>\r\n          First Name:\r\n          <input\r\n            name=\"firstName\"\r\n            value={values.firstName}\r\n            onChange={handleChanges}\r\n          />\r\n        </label>\r\n        <label>\r\n          Last Name:\r\n          <input\r\n            name=\"lastName\"\r\n            value={values.lastName}\r\n            onChange={handleChanges}\r\n          />\r\n        </label>\r\n        <label>\r\n          Address:\r\n          <input\r\n            name=\"address\"\r\n            value={values.address}\r\n            onChange={handleChanges}\r\n          />\r\n        </label>\r\n        <label>\r\n          City:\r\n          <input name=\"city\" value={values.city} onChange={handleChanges} />\r\n        </label>\r\n        <label>\r\n          State:\r\n          <input name=\"state\" value={values.state} onChange={handleChanges} />\r\n        </label>\r\n        <label>\r\n          Zip:\r\n          <input name=\"zip\" value={values.zip} onChange={handleChanges} />\r\n        </label>\r\n        <button>Checkout</button>\r\n      </form>\r\n      {showSuccessMessage && (\r\n        <div className=\"success-message\" data-testid=\"successMessage\">\r\n          <p>\r\n            You have ordered some plants! Woo-hoo! <span role=\"img\">üéâ</span>\r\n          </p>\r\n          <p>Your new green friends will be shipped to:</p>\r\n          <br />\r\n          <br />\r\n          <p>\r\n            {values.firstName} {values.lastName}\r\n          </p>\r\n          <p>{values.address}</p>\r\n          <p>\r\n            {values.city}, {values.state} {values.zip}\r\n          </p>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default CheckoutForm;\r\n","// write your custom hook here to control your checkout form\r\n\r\nimport {useState} from 'react'\r\n\r\n\r\nexport const useForm = (initialValue) => {\r\n    const [values, setValues] = useState(initialValue);\r\n\r\n    const handleChanges = (e) => {\r\n        setValues({ ...values, [e.target.name]: e.target.value });\r\n      };\r\n\r\n      return [values, handleChanges]\r\n}","import React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Route, NavLink } from \"react-router-dom\";\r\n\r\nimport PlantList from \"./components/PlantList\";\r\nimport ShoppingCart from \"./components/ShoppingCart\";\r\nimport CheckoutForm from \"./components/CheckoutForm\";\r\nimport {useDarkMode} from \"./hooks/useDarkMode\";\r\n\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n\r\n  const [darkMode, setDarkMode] = useDarkMode(false);\r\n  const changeBackground = e => {\r\n    e.preventDefault();\r\n    setDarkMode(!darkMode);\r\n  };\r\n\r\n  // array of plants that have been added to the cart\r\n  const [cart, setCart] = useState([]);\r\n\r\n  // add a plant to the cart\r\n  const addToCart = (plant) => {\r\n    setCart([...cart, plant]);\r\n  };\r\n\r\n  // remove a plant from the cart\r\n  const removeFromCart = (plant) => {\r\n    setCart(cart.filter((p) => p.id !== plant.id));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <nav className=\"container\">\r\n          <h1>\r\n            React Plants <span role=\"img\">üåø</span>\r\n          </h1>\r\n          <button onClick={changeBackground}> Tell me your Mode! </button>\r\n          <ul className=\"steps\">\r\n            <li>\r\n              <NavLink exact to=\"/\">\r\n                Plants\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/cart\">\r\n                Cart\r\n                <span className=\"cart-badge\">\r\n                  {cart.length > 0 && cart.length}\r\n                </span>\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        <Route\r\n          exact\r\n          path=\"/\"\r\n          render={() => <PlantList addToCart={addToCart} />}\r\n        />\r\n        <Route\r\n          path=\"/cart\"\r\n          render={(props) => (\r\n            <ShoppingCart\r\n              {...props}\r\n              cart={cart}\r\n              removeFromCart={removeFromCart}\r\n            />\r\n          )}\r\n        />\r\n        <Route path=\"/checkout\" component={CheckoutForm} />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import {useState, useEffect} from 'react'\r\n\r\nexport const useDarkMode = ( initialVal) => {\r\nconst [values, setValues] = useState(initialVal)\r\n\r\nuseEffect( () => {\r\n    values ? document.body.classList.add('dark-mode') : document.body.classList.remove('dark-mode')\r\n}, [values])\r\n\r\nreturn [values, setValues]\r\n\r\n}","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}